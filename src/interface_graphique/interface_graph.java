/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interface_graphique;

import Cellule.*;
import CelluleGraphique.CelluleGraphique;
import GrilleDeJeu.GrilleDeJeu;
import Partie.*;
import java.awt.GridLayout;
import javax.swing.JButton;

/**
 *
 * @author MaÃ«l
 */
public class interface_graph extends javax.swing.JFrame {

    /**
     * Creates new form interface_graph
     */
    public GrilleDeJeu grille;
    public Partie game;

    public interface_graph() {
        initComponents();
        int nbLignes = 5;
        int nbColonnes = 5;
        double bombes = (nbLignes * nbColonnes) * 0.21;
        int bombe = (int) bombes;

        Cellule[][] tab = new Cellule[nbLignes][nbColonnes];
        for (int i = 0; i < nbLignes; i++) {
            for (int j = 0; j < nbColonnes; j++) {
                tab[i][j] = new Cellule(false, false, 0);
            }
        }
        grille = new GrilleDeJeu(tab, nbLignes, nbColonnes, bombe);

        grille.placerBombesAleatoirement();
        grille.calculerBombesAdjacentes();

        PanneauGrille.setLayout(new GridLayout(nbLignes, nbColonnes));
        for (int i = 0; i < nbLignes; i++) {
            for (int j = 0; j < nbColonnes; j++) {
                CelluleGraphique bouton_cellule = new CelluleGraphique(i, j, grille.getMatrice()[i][j]);
                PanneauGrille.add(bouton_cellule);

                bouton_cellule.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        grille.nbCasesReveles();
                        if (grille.nbCasesReveles() == 0) {
                            grille.premier_coup(bouton_cellule.x + 1, bouton_cellule.y + 1);

                        }
                        grille.revelerCellule(bouton_cellule.x + 1, bouton_cellule.y + 1);
                        if (grille.verifierVictoire() == true) {
                            for (int i = 0; i < nbLignes; i++) {
                                for (int j = 0; j < nbColonnes; j++) {
                                    grille.revelerCellule(i + 1, j + 1);
                                }
                            }

                        }
                        if (grille.verifierDefaite() == true) {
                            for (int i = 0; i < nbLignes; i++) {
                                for (int j = 0; j < nbColonnes; j++) {
                                    grille.revelerCellule(i + 1, j + 1);
                                }
                            }

                        }

                        PanneauGrille.repaint();
                    }
                }
                );
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanneauGrille = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        PanneauGrille.setBackground(new java.awt.Color(0, 204, 255));

        javax.swing.GroupLayout PanneauGrilleLayout = new javax.swing.GroupLayout(PanneauGrille);
        PanneauGrille.setLayout(PanneauGrilleLayout);
        PanneauGrilleLayout.setHorizontalGroup(
            PanneauGrilleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 950, Short.MAX_VALUE)
        );
        PanneauGrilleLayout.setVerticalGroup(
            PanneauGrilleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 510, Short.MAX_VALUE)
        );

        getContentPane().add(PanneauGrille, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 950, 510));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * @param args the command line arguments
     */

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(interface_graph.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(interface_graph.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(interface_graph.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(interface_graph.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new interface_graph().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanneauGrille;
    // End of variables declaration//GEN-END:variables

}
